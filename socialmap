#!/usr/bin/env perl

use Mojolicious::Lite;

use lib 'lib';
use Model::Schema;

my $MODEL = Model::Schema->connect('dbi:SQLite:socialmap.db');

#### Pages...

get '/' => sub {

    my $self = shift;
    $self->session( page => 'index' );

    $self->render( 'index', layout => 'default' );

} => 'index';

get '/places' => sub {

    my $self = shift;
    $self->session( page => 'places' );

    my @places =
      $MODEL->resultset('Place')->search( {}, { order_by => 'place_id DESC' } );

    $self->{'places'} = \@places;

    $self->render( 'places', layout => 'default' );
    return $self->redirect_to('index') unless $self->session('user_id');

} => 'places';

get '/stories' => sub {

    my $self = shift;
    $self->session( page => 'stories' );

    my @stories =
      $MODEL->resultset('Story')->search( {}, { order_by => 'story_id DESC' } );

    $self->{'stories'} = \@stories;

    $self->render( 'stories', layout => 'default' );
    return $self->redirect_to('index') unless $self->session('user_id');

} => 'stories';

get '/ads' => sub {

    my $self = shift;
    $self->session( page => 'ads' );

    my @ads =
      $MODEL->resultset('Ad')->search( {}, { order_by => 'ad_id DESC' } );

    $self->{'ads'} = \@ads;

    $self->render( 'ads', layout => 'default' );
    return $self->redirect_to('index') unless $self->session('user_id');

} => 'ads';

get '/users' => sub {

    my $self = shift;
    $self->session( page => 'users' );

    my @users =
      $MODEL->resultset('User')->search( {}, { order_by => 'user_id ASC' } );

    $self->{'users'} = \@users;

    $self->render( 'users', layout => 'default' );
    return $self->redirect_to('index') unless $self->session('user_id');

} => 'users';

#### Functions...

get '/session' => sub {

    my $self = shift;

    if ( $self->param('facebook_id') ) {

        my @users = $MODEL->resultset('User')->search();

        my $no_match;

        for my $user (@users) {

            $no_match++
              unless $self->param('facebook_id') eq $user->facebook_id;
        }

        if ( $no_match == scalar @users ) {

            my $user = $MODEL->resultset('User')->create(

                {
                    facebook_id => $self->param('facebook_id'),
                    name        => $self->param('name'),
                    gender      => $self->param('gender'),
                    link        => $self->param('link'),
                    email       => $self->param('email'),
                    location    => $self->param('location'),
                    timezone    => $self->param('timezone'),
                }
            );
        }

        for my $user (@users) {

            if ( $user->facebook_id eq $self->param('facebook_id') ) {

                $self->session(

                    user_id     => $user->user_id,
                    facebook_id => $user->facebook_id,
                    name        => $user->name,
                    gender      => $user->gender,
                    email       => $user->email,
                    location    => $user->location,
                    timezone    => $user->timezone,
                );

                return $self->redirect_to( $self->session('page') );
            }
        }
    }
    elsif ( $self->param('expires') ) {

        $self->session( expires => $self->param('expires') );
    }

    return $self->redirect_to( $self->session('page') );

} => 'session';

any '/:page/:id' => [ page => qr/\w+/, id => qr/\d+/ ] => sub {

    my $self = shift;

    if ( $self->param('page') eq 'users' ) {

        my @users = $MODEL->resultset('User')
          ->search( { user_id => $self->param('id') } );
          
        $self->{'users'} = \@users;
        $self->render( 'users', layout => 'default' );
    }

    elsif ( $self->param('page') eq 'places' ) {

        my @places = $MODEL->resultset('Place')
          ->search( { place_id => $self->param('id') } );
          
        $self->{'places'} = \@places;
        $self->render( 'places', layout => 'default' );
    }
    
    elsif ( $self->param('page') eq 'stories' ) {

        my @stories = $MODEL->resultset('Story')
          ->search( { story_id => $self->param('id') } );
        
        $self->{'stories'} = \@stories;
        $self->render( 'stories', layout => 'default' );
    }
    
    elsif ( $self->param('page') eq 'ads' ) {

        my @ads = $MODEL->resultset('Ad')
          ->search( { ad_id => $self->param('id') } );
          
        $self->{'ads'} = \@ads;
        $self->render( 'ads', layout => 'default' );
    }
    
};

#### Forms...

post '/search' => sub {

    my $self = shift;

    if ( $self->param('value') ) {

        my $value = $self->param('value');
        $self->session( search => $value );
    }

} => 'search';

post '/post' => sub {

    my $self = shift;

    my ( $sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst ) =
      localtime(time);

    if ( $self->param('table') eq 'place' ) {

        my $place = $MODEL->resultset('Place')->create(

            {
                category => $self->param('category'),
                title    => $self->param('title'),
                body     => $self->param('body'),
                date     => "$year-$mon-$mday",
                time     => "$hour:$min:$sec",
                user     => $self->session('user_id'),
            }
        );

        return $self->redirect_to('places');
    }

    if ( $self->param('table') eq 'story' ) {

        my $story = $MODEL->resultset('Story')->create(

            {
                category => $self->param('category'),
                title    => $self->param('title'),
                body     => $self->param('body'),
                date     => "$year-$mon-$mday",
                time     => "$hour:$min:$sec",
                user     => $self->session('user_id'),
            }
        );

        return $self->redirect_to('stories');
    }

    if ( $self->param('table') eq 'ad' ) {

        my $ad = $MODEL->resultset('Ad')->create(

            {
                category => $self->param('category'),
                title    => $self->param('title'),
                body     => $self->param('body'),
                date     => "$year-$mon-$mday",
                time     => "$hour:$min:$sec",
                user     => $self->session('user_id'),
            }
        );

        return $self->redirect_to('ads');
    }

    return $self->redirect_to( $self->session('page') );

} => 'post';

app->secret('SocialMAP Rocks!');
app->start;
